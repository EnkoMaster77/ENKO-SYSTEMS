// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏•‡∏≠‡∏á: ‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡∏∞‡∏ï‡πâ‡∏ô‡∏ó‡∏∏‡∏ô‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô
const monthlyStats = {
  orders: 120,
  sales: 85,
  totalValue: 58000,
  cost: 30500,
};

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô (Pie Chart)
const materialBreakdown = {
  labels: ["‡∏ó‡∏≠‡∏á‡πÅ‡∏î‡∏á", "‡∏≠‡∏•‡∏π‡∏°‡∏¥‡πÄ‡∏ô‡∏µ‡∏¢‡∏°", "‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å", "‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©"],
  data: [35, 25, 20, 20],
};

// ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô (Bar Chart)
const dailySales = Array.from({ length: 30 }, () => Math.floor(Math.random() * 3000) + 1000);

// ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î 5 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
const recentItems = [
  { name: "‡∏ó‡∏≠‡∏á‡πÅ‡∏î‡∏á", amount: "12 ‡∏Å‡∏Å.", price: 1200, date: "15 ‡∏Å.‡∏Ñ." },
  { name: "‡∏û‡∏•‡∏≤‡∏™‡∏ï‡∏¥‡∏Å", amount: "18 ‡∏Å‡∏Å.", price: 650, date: "14 ‡∏Å.‡∏Ñ." },
  { name: "‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏©", amount: "7 ‡∏Å‡∏Å.", price: 250, date: "13 ‡∏Å.‡∏Ñ." },
  { name: "‡∏≠‡∏•‡∏π‡∏°‡∏¥‡πÄ‡∏ô‡∏µ‡∏¢‡∏°", amount: "5 ‡∏Å‡∏Å.", price: 430, date: "13 ‡∏Å.‡∏Ñ." },
  { name: "‡∏ó‡∏≠‡∏á‡πÅ‡∏î‡∏á", amount: "4 ‡∏Å‡∏Å.", price: 390, date: "12 ‡∏Å.‡∏Ñ." },
];

// üü© ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏£‡∏∏‡∏õ‡∏¢‡∏≠‡∏î
function updateSummaryCards() {
  const netIncome = monthlyStats.totalValue - monthlyStats.cost;

  const cards = document.querySelectorAll(".card");
  cards[0].querySelector("p").textContent = `${monthlyStats.orders} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
  cards[1].querySelector("p").textContent = `${monthlyStats.sales} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£`;
  cards[2].querySelector("p").textContent = `‡∏ø${monthlyStats.totalValue.toLocaleString()}`;
  cards[3].querySelector("p").textContent = `‡∏ø${netIncome.toLocaleString()}`;
}

// ü•ß ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•
function renderPieChart() {
  const ctx = document.getElementById("pieChart").getContext("2d");
  new Chart(ctx, {
    type: "doughnut",
    data: {
      labels: materialBreakdown.labels,
      datasets: [{
        data: materialBreakdown.data,
        backgroundColor: ["#e17055", "#0984e3", "#00b894", "#fdcb6e"]
      }]
    },
    options: {
      plugins: {
        title: { display: true, text: "‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ß‡∏±‡∏™‡∏î‡∏∏‡∏£‡∏µ‡πÑ‡∏ã‡πÄ‡∏Ñ‡∏¥‡∏•" },
        legend: { position: "bottom" }
      }
    }
  });
}

// üìä ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô
function renderBarChart() {
  const ctx = document.getElementById("barChart").getContext("2d");
  const labels = Array.from({ length: 30 }, (_, i) => `‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${i + 1}`);

  new Chart(ctx, {
    type: "bar",
    data: {
      labels: labels,
      datasets: [{
        label: "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (‡∏ö‡∏≤‡∏ó)",
        data: dailySales,
        backgroundColor: "#00b894"
      }]
    },
    options: {
      plugins: {
        title: { display: true, text: "‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô (1 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô)" }
      },
      scales: {
        y: { beginAtZero: true }
      }
    }
  });
}

// üìã ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
function renderRecentItems() {
  const container = document.getElementById("recentList");
  let html = `<table><thead><tr><th>‡∏ä‡∏∑‡πà‡∏≠‡∏ß‡∏±‡∏™‡∏î‡∏∏</th><th>‡∏õ‡∏£‡∏¥‡∏°‡∏≤‡∏ì</th><th>‡∏£‡∏≤‡∏Ñ‡∏≤</th><th>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà</th></tr></thead><tbody>`;

  recentItems.forEach(item => {
    html += `<tr>
      <td>${item.name}</td>
      <td>${item.amount}</td>
      <td>‡∏ø${item.price.toLocaleString()}</td>
      <td>${item.date}</td>
    </tr>`;
  });

  html += `</tbody></table>`;
  container.innerHTML = html;
}

// üöÄ ‡πÇ‡∏´‡∏•‡∏î‡∏ó‡∏∏‡∏Å‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏´‡∏ô‡πâ‡∏≤‡πÇ‡∏´‡∏•‡∏î
window.addEventListener("DOMContentLoaded", () => {
  updateSummaryCards();
  renderPieChart();
  renderBarChart();
  renderRecentItems();
});


